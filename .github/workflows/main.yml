name: ProjectHub CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18'
  BACKEND_IMAGE: maksimsh20/projecthub-api:latest
  FRONTEND_IMAGE: maksimsh20/projecthub-frontend:latest
  AI_IMAGE: maksimsh20/projecthub-ai:latest

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore backend dependencies
        run: |
          cd ProjectHub/ProjectHub.API
          dotnet restore

      - name: Build backend
        run: |
          cd ProjectHub/ProjectHub.API
          dotnet build --configuration Release

      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore test dependencies
        run: |
          cd ProjectHub/NUnitTests
          dotnet restore

      - name: Build backend (for test)
        run: |
          cd ProjectHub/ProjectHub.API
          dotnet build --configuration Release

      - name: Build backend (for test)
        run: |
          cd ProjectHub/NUnitTests
          dotnet build --configuration Release

      - name: Run API and tests
        run: |
          cd ProjectHub/ProjectHub.API
          dotnet run --urls=http://localhost:7001 > api.log 2>&1 &
          API_PID=$!
          echo "Waiting for API to start..."
          for i in {1..10}; do
            if curl -s http://localhost:7001 > /dev/null; then
              echo "API is up!"
              break
            fi
            sleep 3
          done

          if ! curl -s http://localhost:7001 > /dev/null; then
            echo "API did not start in time"
            cat api.log
            kill $API_PID
            exit 1
          fi

          cd ../NUnitTests
          dotnet test --no-restore --logger "console;verbosity=detailed"
          kill $API_PID

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build backend image
        run: docker build -t ${{ env.BACKEND_IMAGE }} -f Dockerfile .

      - name: Build frontend image
        run: docker build -t ${{ env.FRONTEND_IMAGE }} --build-arg NEXT_PUBLIC_API_BASE_URL=https://projecthub-api-app-d5dwe8gnhyetdtch.eastus-01.azurewebsites.net ./frontend

      - name: Build AI image
        run: docker build -t ${{ env.AI_IMAGE }} ./llm_service

      - name: Push images
        run: |
          docker push ${{ env.BACKEND_IMAGE }}
          docker push ${{ env.FRONTEND_IMAGE }}
          docker push ${{ env.AI_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure Backend API Environment Variables
        run: |
          az webapp config appsettings set \
            --name projecthub-api-app \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
              ASPNETCORE_ENVIRONMENT=Production \
              "Jwt__Key=${{ secrets.JWT_SECRET_KEY }}" \
              "Jwt__Issuer=ProjectHub" \
              "Jwt__Audience=ProjectHub.API" \
              "Jwt__ExpireMinutes=60"

      - name: Deploy Backend API
        uses: azure/webapps-deploy@v2
        with:
          app-name: projecthub-api-app
          images: maksimsh20/projecthub-api

      - name: Configure Frontend Environment Variables
        run: |
          az webapp config appsettings set \
            --name projecthub-frontend-app \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
              NODE_ENV=production \
              NEXT_PUBLIC_API_BASE_URL=https://projecthub-api-app-d5dwe8gnhyetdtch.eastus-01.azurewebsites.net

      - name: Deploy Frontend
        uses: azure/webapps-deploy@v2
        with:
          app-name: projecthub-frontend-app
          images: maksimsh20/projecthub-frontend

      - name: Configure AI Service Environment Variables
        run: |
          az webapp config appsettings set \
            --name projecthub-ai-app \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
              "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" \
              BACKEND_API_URL=https://projecthub-api-app-d5dwe8gnhyetdtch.eastus-01.azurewebsites.net

      - name: Deploy AI Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: projecthub-ai-app
          images: maksimsh20/projecthub-ai
